[General]
name = comprior
#number of available cores that can be used for parallel running of gene selectors
numCores = 4
homePath = /path/to/your/comprior/installation/
inputDir = ${General:homePath}data/input/
intermediateDir = ${General:homePath}data/intermediate/
externalKbDir = ${General:intermediateDir}externalKnowledge/
resultsDir = ${General:homePath}data/results/
preprocessing = ${General:intermediateDir}dataset/
crossVal_preprocessing = ${General:intermediateDir}crossvalidation/
outputDir_name = Alzheimer_kbCoverage

[R]
code = ${General:homePath}code/R
RscriptLocation=/path/to/your/Rscript

[Java]
code = ${General:homePath}code/Java/target/
JavaLocation=/path/to/your/java

[Dataset]
#input = ${General:inputDir}dataset/BRCA/TCGA/BRCA_TP_expressions_normalized.csv
#metadata = ${General:inputDir}dataset/BRCA/TCGA/BRCA_TP_metadata.csv
input = ${General:inputDir}example/example_TCGA-BRCA_500samples_5000genes.csv
metadata = ${General:inputDir}example/example_TCGA-BRCA_metadata.csv
#specify the column name of the label to use for classification, e.g. TCGA: project_id, shortLetterCode
#BRCA subtypes: subtype_BRCA_Subtype_PAM50
classLabelName = subtype_BRCA_Subtype_PAM50
#specify alternative search terms for knowledge bases (replace spaces by _, e.g. Kidney_Cancer)
alternativeSearchTerms = Alzheimers_Disease Alzheimer Alzheimer_Dementia Alzheimer_Sclerosis Alzheimer_Syndrome Alzheimer_Type_Dementia Alzheimers_Dementia Senile_Dementia_Alzheimer_Type Primary_Senile_Degenerative_Dementia Mild_Cognitive_Impairment Mild_Neurocognitive_Disorder Mild_Cognitive_Disorder
#specify what is in the columns (genes or samples) so that the data can be transformed automatically
genesInColumns = true
metadataIDsInColumns = true
#specify how the cell items are separated, e.g. via comma, tab, ...
#make sure both metadata and original data set are formatted this way
dataSeparator = ,
#specify the current gene ID format with biomaRt IDs: entrezgene ensembl_gene_id affy_hg_u133_plus_2 hgnc_symbol
currentGeneIDFormat = ENSG
#specify the (biomaRt) gene ID format you want to have in your gene rankings
finalGeneIDFormat = HGNC


[Preprocessing]
#filter out genes that have a higher percentage of missing fields than specified in the treshold
filterMissingsInGenes = false
#filter out samples that have a higher percentage of missing fields than specified in the treshold
filterMissingsInSamples = false
threshold = 1


[Gene Selection - General]
#this is where the merged DisGeNET gene list is located!
outputDirectory = geneRankings/
#maximum number of genes to select (to reduce runtimes) must be >= Evaluation-topKmax
selectKgenes = 10


[Gene Selection - Methods]
#select multiple traditional gene selection methods:
#filter: Random, InfoGain, ReliefF, VB-FS, ANOVA, Variance
#wrapper: SVMpRFE (SVM-RFE with polykernel), *-SFS, *-RFE (* = add the desired classifier: K-nearest Neighbor (KNN3, KNN5), Naive Bayes (NB), Linear Regression (LR), Support Vector Machines with linear kernel (SVMl))
#embedded: RandomForest, Lasso
traditional_methods = Random
#define pre- and post-filtering approaches: combine knowledge base with traditional approach
#e.g. Postfilter_SVM-RFE_KEGG = postfilter all genes by KEGG and apply SVMl-RFE afterwards
modifying_methods =
#Weighted_x_y weights the  score from trad. approach x by the score retrieved from knowledge base y: weighted_InfoGain_KEGG
combining_methods =
#networkactivity_x identifies pathways from knowledge base x as features
network_methods = NetworkActivity_PathwayCommons

[Evaluation]
topKmin = 2
topKmax = 10
kfold = 5
results = evaluation/
preanalysis = preanalysis/
#create plots on raw data: density plot (density), boxplot (box), MDS plot (mds)
preanalysis_plots =
#create diagrams showing coverage of search terms in the used knowledge bases
evaluateKBcoverage = false
#umbiegen auf [Classification:preparedDir]
reducedDataset = ${Evaluation:results}reducedData/
#umbiegen auf [Classification:crossEvaluationDir] und [Prediction:crossEvaluationDir] und robustness
robustnessResults = ${Evaluation:results}robustness/
enableCrossEvaluation = true
crossEvaluationData = ${General:inputDir}example/crossEval_TCGA-BRCA_610samples_5000genes_labeled.csv
crossEvaluationClassLabel = classLabel
#current gene ID format of the data set for cross evaluation
crossEvaluationGeneIDFormat = ENSG
enableClassification = true
enablePrediction = false

[Rankings]
results=${Evaluation:results}rankings/
metricsDir = ${Rankings:results}metrics/
annotationsDir = ${Rankings:results}annotation/
#specify metrics to apply: top_k_overlap kendall_w fleiss_kappa annotation_overlap enrichment_overlap annotation_percentage average_foldchange
metrics = top_k_overlap annotation_overlap enrichment_overlap

[Classification]
#specify classifiers to use for classsification task: K-nearest Neighbor (KNN3, KNN5), Naive Bayes (NB), Linear Regression (LR), Support Vector Machines (SMO), Random Forest (RF)
classifiers =  NB LR SMO RF
metrics = matthewcoef sensitivity specificity accuracy kappa F1 AUROC
results = ${Evaluation:results}classification/
crossEvaluationDir = ${Classification:results}crossEvaluation/
metricsDir = ${Classification:results}metrics/

[Prediction]
predictors =  test
metrics = accuracy kappa
results=${Evaluation:results}prediction/
crossEvaluationDir = ${Prediction:results}crossEvaluation/
metricsDir = ${Prediction:results}metrics/

[Enrichr]
webservice_uri = https://maayanlab.cloud/Enrichr/
outputDir = ${General:externalKbDir}Enrichr/
geneSetLibrary = KEGG_2019_Human

[OpenTargets]
outputDir = ${General:externalKbDir}OpenTargets/

[KEGG]
outputDir = ${General:externalKbDir}KEGG/
#specify the maximum number of pathways to retrieve per search term
maxNumPathways = 100

[UMLS]
login_uri = https://utslogin.nlm.nih.gov
loginservice_uri = http://umlsks.nlm.nih.gov
auth_endpoint = /cas/v1/api-key/
apikey = fdaa640f-117c-43dd-b3b2-53efb537f13e
webservice_uri = https://uts-ws.nlm.nih.gov/rest


[DisGeNET]
#specify which association score to use: score (overall score), gene_dsi (disease specificity), gene_dpi (disease pleiotropy)
associationScore = score
webservice_url = https://www.disgenet.org/api
outputDir = ${General:externalKbDir}DisGeNET/

[PathwayCommons]
webservice_url = https://www.pathwaycommons.org/pc2
outputDir = ${General:externalKbDir}PathwayCommons/
#specify the maximum number of pathways to retrieve per search term
maxNumPathways = 100

[Biomart]
outputDir = ${General:externalKbDir}Biomart/

[gConvert]
webservice_url = https://biit.cs.ut.ee/gprofiler/api/convert/convert/
outputDir = ${General:externalKbDir}gConvert/
